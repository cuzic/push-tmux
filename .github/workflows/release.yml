name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        type: string

jobs:
  test-before-release:
    name: Test Before Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install mise
      uses: jdx/mise-action@v2
      with:
        version: latest
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: latest
    
    - name: Set up Python environment
      run: |
        mise trust
        mise install
        uv sync --extra test
        
    - name: Run full test suite
      run: |
        uv run pytest --cov=push_tmux --cov-report=term-missing
        
    - name: Run linting
      run: |
        uv run ruff format --check .
        uv run ruff check .
        
    - name: Test package build
      run: |
        # Test that the package can be built
        uv build
        echo "âœ… Package builds successfully"
        
  create-artifacts:
    name: Create Release Artifacts
    runs-on: ubuntu-latest
    needs: test-before-release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install mise
      uses: jdx/mise-action@v2
      with:
        version: latest
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: latest
    
    - name: Set up Python environment
      run: |
        mise trust
        mise install
        uv sync
        
    - name: Build distribution packages
      run: |
        uv build
        
    - name: Create wrapper script archive
      run: |
        # Create a tarball with wrapper scripts and documentation
        tar -czf push-tmux-wrapper-scripts.tar.gz \
          push-tmux-wrapper.sh \
          install-wrapper.sh \
          README.md \
          .devcontainer/README.md
        
    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts
        path: |
          dist/
          push-tmux-wrapper-scripts.tar.gz
        retention-days: 30

  publish-to-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: [test-before-release, create-artifacts]
    if: github.event_name == 'release'
    environment: release
    
    permissions:
      id-token: write  # For trusted publishing to PyPI
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install mise
      uses: jdx/mise-action@v2
      with:
        version: latest
        
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: latest
    
    - name: Set up Python environment
      run: |
        mise trust
        mise install
        uv sync
        
    - name: Build distribution packages
      run: uv build
      
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: dist/